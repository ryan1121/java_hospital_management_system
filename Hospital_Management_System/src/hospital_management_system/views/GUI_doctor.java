/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hospital_management_system.views;
import hospital_management_system.MysqlConnect;
import hospital_management_system.controllers.*;
import hospital_management_system.models.*;

import java.awt.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class GUI_doctor extends javax.swing.JFrame {
    String username;
    private DoctorController controller;
    /**
     * Creates new form GUI_doctor
     */
    public GUI_doctor(String username) {
        initComponents();
        this.username = username;
        controller = new DoctorController(new DoctorModel(), this);
        controller.fetchDataAndDisplay(username);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        information_save = new javax.swing.JButton();
        information_clear = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        doctor_status = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        doctor_id = new javax.swing.JTextField();
        doctor_name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        doctor_phone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        doctor_email = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        doctor_specialization = new javax.swing.JTextField();
        doctor_department = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctor_qualifications = new javax.swing.JTextPane();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        doctor_experience = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        backButton = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        doctorScrollPane = new javax.swing.JScrollPane();
        doctorScheduleTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        DiagnosisID_label = new javax.swing.JLabel();
        treatmentPlans_label = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        treatmentPlans_TextArea = new javax.swing.JTextArea();
        DateOfDiagnosis_label = new javax.swing.JLabel();
        DateOfDiagnosis_textField = new javax.swing.JFormattedTextField();
        DiagnosisDescription_label = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        DiagnosisDescription_TextArea = new javax.swing.JTextArea();
        DiagnosisID_textField = new javax.swing.JTextField();
        Diagnosis_SaveButton = new javax.swing.JButton();
        Diagnosis_ClearButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        prescriptionID_label = new javax.swing.JLabel();
        Outcomes_label = new javax.swing.JLabel();
        Outcomes_textField = new javax.swing.JTextField();
        surgeryType_label = new javax.swing.JLabel();
        surgeryType_comboBox = new javax.swing.JComboBox<>();
        DateOfSurgery_textField = new javax.swing.JFormattedTextField();
        DateOfSurgery_label = new javax.swing.JLabel();
        surgeryID_textField = new javax.swing.JTextField();
        SurgManage_SaveButton = new javax.swing.JButton();
        SurgManage_ClearButton = new javax.swing.JButton();
        patientID_textField = new javax.swing.JTextField();
        doctorID_textField = new javax.swing.JTextField();
        PatientID_label = new javax.swing.JLabel();
        DoctorID_label = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        medicalRecordID_label8 = new javax.swing.JLabel();
        treatmentPlans_label10 = new javax.swing.JLabel();
        jScrollPane17 = new javax.swing.JScrollPane();
        medical_record_treatmentPlansTextField = new javax.swing.JTextArea();
        DateOfVisit_label8 = new javax.swing.JLabel();
        medicalRecord_dateOfVisitTextField = new javax.swing.JFormattedTextField();
        Notes_label8 = new javax.swing.JLabel();
        medicalRecord_notesTextField = new javax.swing.JTextField();
        medicalRecordID_textField = new javax.swing.JTextField();
        Dimension size = new Dimension(200, 20); 
        medicalRecordID_textField.setPreferredSize(size);
        surgeryType_comboBox.setPreferredSize(size);

        MedRecord_SaveButton = new javax.swing.JButton();
        MedRecord_ClearButton = new javax.swing.JButton();

        hospital_management_system.models.Diagnosis DiagnosisObj = new hospital_management_system.models.Diagnosis(jPanel3, patientID_textField, doctorID_textField, DiagnosisID_textField, DateOfDiagnosis_textField, DiagnosisDescription_TextArea, treatmentPlans_TextArea);
        DiagnosisObj.setNewDiagnosisId(DiagnosisID_textField);
        DiagnosisID_textField.setEnabled(false);

        Surgery getNewSurgeryIdObj = new Surgery(jPanel3, patientID_textField, doctorID_textField, surgeryID_textField, surgeryType_comboBox, DateOfSurgery_textField, Outcomes_textField);
        getNewSurgeryIdObj.setNewSurgeryId(surgeryID_textField);
        surgeryID_textField.setEnabled(false);

        MedicalRecords getNewMedicalRecordIdObj = new MedicalRecords(jPanel3, patientID_textField, doctorID_textField, medicalRecordID_textField, medicalRecord_dateOfVisitTextField, medicalRecord_notesTextField, medical_record_treatmentPlansTextField);
        getNewMedicalRecordIdObj.setNewMedicalRecordId(medicalRecordID_textField);
        medicalRecordID_textField.setEnabled(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        information_save.setText("Save");
        information_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                information_saveActionPerformed(evt);
            }
        });

        information_clear.setText("Clear");
        information_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controller.clearDoctorInfo();
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Details"));

        doctor_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Not Active", "" }));

        jLabel1.setText("Doctor ID:");

        doctor_id.setText("");
        doctor_id.setEnabled(false);

        doctor_name.setText(username);

        jLabel2.setText("Name :");

        jLabel3.setText("Phone Number :");

        doctor_phone.setText("");

        jLabel4.setText("Email :");

        doctor_email.setText("");

        jLabel5.setText("Specialization :");

        doctor_specialization.setText("");

        doctor_department.setText("");

        jLabel6.setText("Department :");

        jScrollPane2.setViewportView(doctor_qualifications);

        jLabel8.setText("Qualifications : ");

        jLabel7.setText("Experience :");
        Border border = BorderFactory.createLineBorder(Color.GRAY, 1); // Black border with 1-pixel width
        doctor_experience.setBorder(border);

        jLabel10.setText("Status :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctor_name)
                            .addComponent(doctor_specialization)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(doctor_id, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctor_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctor_email)
                            .addComponent(doctor_phone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(doctor_experience)
                            .addComponent(jScrollPane2)
                            .addComponent(doctor_department, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(doctor_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(doctor_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(doctor_specialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctor_department, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(doctor_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(doctor_experience, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(doctor_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)))
                .addGap(21, 21, 21)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(doctor_status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );


        backButton.setForeground(new java.awt.Color(0, 51, 255));
        backButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backButton.setText("Back");
        backButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backButtonMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(227, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(information_save)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(information_clear))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(199, 199, 199))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(information_clear)
                    .addComponent(information_save)
                    .addComponent(backButton))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Information", jPanel7);

        DefaultTableModel doctorModel = new DefaultTableModel(
            new String[]{"Doctor ID", "Name", "Date", "Start Time", "End Time", "Department", "Tasks"}, 0
        );

        // Set this model to the doctorScheduleTable
        doctorScheduleTable.setModel(doctorModel);

        // Set intercell spacing and line visibility for visual consistency
        doctorScheduleTable.setIntercellSpacing(new java.awt.Dimension(1, 1));
        doctorScheduleTable.setShowHorizontalLines(true);
        doctorScheduleTable.setShowVerticalLines(true);
        doctorScrollPane.setViewportView(doctorScheduleTable);

        WorkScheduleController scheduleController = new WorkScheduleController(doctorScheduleTable, null, doctorScrollPane, null);
        scheduleController.loadDoctorSchedule();

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doctorScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doctorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Work Schedule", jPanel8);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Diagnosis Management", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); 

        DiagnosisID_label.setText("Diagnosis ID : ");

        treatmentPlans_label.setText("Treatment Plans :");

        treatmentPlans_TextArea.setColumns(20);
        treatmentPlans_TextArea.setRows(5);
        jScrollPane8.setViewportView(treatmentPlans_TextArea);

        DateOfDiagnosis_label.setText("Date of Diagnosis : ");

        DateOfDiagnosis_textField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/mm/y"))));

        DiagnosisDescription_label.setText("Diagnosis Description : ");

        DiagnosisDescription_TextArea.setColumns(20);
        DiagnosisDescription_TextArea.setRows(5);
        jScrollPane9.setViewportView(DiagnosisDescription_TextArea);

        Diagnosis_SaveButton.setText("Save");
        Diagnosis_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosisController DiagnosisControllerObj = new DiagnosisController(jPanel3, patientID_textField, doctorID_textField, DiagnosisID_textField, DateOfDiagnosis_textField, DiagnosisDescription_TextArea, treatmentPlans_TextArea);
                DiagnosisControllerObj.handleSaveButtonActionPerformed(evt);
            }
        });

        Diagnosis_ClearButton.setText("Clear");
        Diagnosis_ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiagnosisController DiagnosisControllerObj = new DiagnosisController(jPanel3, patientID_textField, doctorID_textField, DiagnosisID_textField, DateOfDiagnosis_textField, DiagnosisDescription_TextArea, treatmentPlans_TextArea);
                DiagnosisControllerObj.handleClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(treatmentPlans_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(DiagnosisDescription_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(23, 23, 23)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(DiagnosisID_label)
                                            .addGap(18, 18, 18)
                                            .addComponent(DiagnosisID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addComponent(DateOfDiagnosis_label)
                                            .addGap(18, 18, 18)
                                            .addComponent(DateOfDiagnosis_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(0, 25, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Diagnosis_SaveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Diagnosis_ClearButton)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DiagnosisID_label)
                    .addComponent(DiagnosisID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOfDiagnosis_label)
                    .addComponent(DateOfDiagnosis_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DiagnosisDescription_label)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(treatmentPlans_label)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Diagnosis_SaveButton)
                    .addComponent(Diagnosis_ClearButton))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Surgery Management", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); 

        prescriptionID_label.setText("Surgery ID : ");

        Outcomes_label.setText("Outcomes : ");

        surgeryType_label.setText("Surgery Type : ");

        surgeryType_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Appendectomy", "Cholecystectomy (Gallbladder removal)", "Hernia repair", "Colon resection", "Mastectomy", "Thyroidectomy", "Coronary artery bypass grafting (CABG)", "Heart valve repair/replacement", "Lung resection", "Heart transplant", "Thoracic aortic aneurysm repair", "Joint replacement (hip, knee, shoulder)", "Arthroscopy (knee, shoulder)", "Spinal fusion", "Fracture repair", "Rotator cuff repair", "Craniotomy", "Spinal decompression and fusion", "Brain tumor removal", "Aneurysm repair", "Chiari decompression", "Rhinoplasty", "Breast augmentation/reduction", "Abdominoplasty (tummy tuck)", "Liposuction", "Facelift", "Prostatectomy", "Cystectomy (bladder removal)", "Kidney stone removal", "Vasectomy", "Nephrectomy (kidney removal)", "Cesarean section", "Hysterectomy", "Tubal ligation", "Oophorectomy (ovary removal)", "Myomectomy (fibroid removal)", "Carotid endarterectomy", "Aortic aneurysm repair", "Varicose vein surgery", "Peripheral artery bypass", "Dialysis access creation", "Tonsillectomy", "Adenoidectomy", "Septoplasty", "Cochlear implants", "Sinus surgery", "Cataract surgery", "LASIK", "Glaucoma surgery", "Retinal detachment repair", "Corneal transplant", "Congenital heart defect repair", "Pyloromyotomy (for pyloric stenosis)", "Hirschsprung's disease surgery", "Repair of congenital diaphragmatic hernia" }));

        DateOfSurgery_textField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/mm/y"))));

        DateOfSurgery_label.setText("Date of surgery : ");

        SurgManage_SaveButton.setText("Save");
        SurgManage_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SurgeryController SurgeryObj = new SurgeryController(jPanel3, patientID_textField, doctorID_textField, surgeryID_textField, surgeryType_comboBox, DateOfSurgery_textField, Outcomes_textField);
                SurgeryObj.handleSaveButtonActionPerformed(evt);
            }
        });

        SurgManage_ClearButton.setText("Clear");
        SurgManage_ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SurgeryController SurgeryObj = new SurgeryController(jPanel3, patientID_textField, doctorID_textField, surgeryID_textField, surgeryType_comboBox, DateOfSurgery_textField, Outcomes_textField);
                SurgeryObj.handleClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateOfSurgery_label)
                    .addComponent(Outcomes_label)
                    .addComponent(surgeryType_label)
                    .addComponent(prescriptionID_label))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(surgeryType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Outcomes_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DateOfSurgery_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(surgeryID_textField)
                        .addGap(121, 121, 121))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SurgManage_SaveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SurgManage_ClearButton)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prescriptionID_label)
                    .addComponent(surgeryID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(surgeryType_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(surgeryType_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOfSurgery_label)
                    .addComponent(DateOfSurgery_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Outcomes_label)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(Outcomes_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SurgManage_SaveButton)
                            .addComponent(SurgManage_ClearButton))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        PatientID_label.setText("Patient ID : ");

        DoctorID_label.setText("Doctor ID : ");

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medical Record Mangement", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); 

        medicalRecordID_label8.setText("Medical Record ID : ");

        treatmentPlans_label10.setText("Treatment Plans :");

        medical_record_treatmentPlansTextField.setColumns(20);
        medical_record_treatmentPlansTextField.setRows(5);
        jScrollPane17.setViewportView(medical_record_treatmentPlansTextField);

        DateOfVisit_label8.setText("Date of visit : ");

        medicalRecord_dateOfVisitTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/mm/y"))));

        Notes_label8.setText("Notes : ");

        MedRecord_SaveButton.setText("Save");
        MedRecord_SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicalRecordsController MedicalRecordsObj = new MedicalRecordsController(jPanel3, patientID_textField, doctorID_textField, medicalRecordID_textField, medicalRecord_dateOfVisitTextField, medicalRecord_notesTextField, medical_record_treatmentPlansTextField);
                MedicalRecordsObj.handleSaveButtonActionPerformed(evt);
            }
        });

        MedRecord_ClearButton.setText("Clear");
        MedRecord_ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MedicalRecordsController MedicalRecordsObj = new MedicalRecordsController(jPanel3, patientID_textField, doctorID_textField, medicalRecordID_textField, medicalRecord_dateOfVisitTextField, medicalRecord_notesTextField, medical_record_treatmentPlansTextField);
                MedicalRecordsObj.handleClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(259, Short.MAX_VALUE)
                .addComponent(MedRecord_SaveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MedRecord_ClearButton)
                .addContainerGap())
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(medicalRecordID_label8)
                    .addComponent(DateOfVisit_label8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Notes_label8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(treatmentPlans_label10, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicalRecord_dateOfVisitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicalRecordID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicalRecord_notesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medicalRecordID_label8)
                    .addComponent(medicalRecordID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DateOfVisit_label8)
                    .addComponent(medicalRecord_dateOfVisitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(medicalRecord_notesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Notes_label8))
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(treatmentPlans_label10))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MedRecord_SaveButton)
                    .addComponent(MedRecord_ClearButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DoctorID_label, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(PatientID_label, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(patientID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doctorID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PatientID_label)
                            .addComponent(patientID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DoctorID_label)
                            .addComponent(doctorID_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clinical Operational", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMousePressed
        this.dispose();
        String role = "Doctor";

        Home_Page_GUI homePage = new Home_Page_GUI(role,username);
        homePage.setVisible(true);
    }

    private void Diagnosis_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Diagnosis_SaveButtonActionPerformed
        String patientID = patientID_textField.getText();
        String doctorID = doctorID_textField.getText();

        System.out.println("PatientID: " + patientID);
        System.out.println("DoctorID: " + doctorID);
        if (patientID == null || patientID.isEmpty() && (doctorID == null || doctorID.isEmpty())){
            JOptionPane.showMessageDialog(jPanel3, "You MUST enter patient ID and doctor ID !!");
        } else if (patientID == null || patientID.isEmpty()) {
            System.out.println("Patient ID is blank");
            JOptionPane.showMessageDialog(jPanel3, "You MUST enter patient ID !!");
        } else if (doctorID == null || doctorID.isEmpty()) {
            JOptionPane.showMessageDialog(jPanel3, "You MUST enter doctor ID !!");
        }

        String DiagnosisID = DiagnosisID_textField.getText();
        String dateOfDiagnosis = DateOfDiagnosis_textField.getText();
        String DiagnosisDesc = DiagnosisDescription_TextArea.getText();
        String treatmentPlan = treatmentPlans_TextArea.getText();

        System.out.println(DiagnosisID);
        System.out.println(dateOfDiagnosis);
        System.out.println(DiagnosisDesc);
        System.out.println(treatmentPlan);


    }//GEN-LAST:event_Diagnosis_SaveButtonActionPerformed

    private void MedRecord_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedRecord_SaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedRecord_SaveButtonActionPerformed

    private void MedRecord_ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MedRecord_ClearButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MedRecord_ClearButtonActionPerformed

    private void SurgManage_SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SurgManage_SaveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SurgManage_SaveButtonActionPerformed

    private void SurgManage_ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SurgManage_ClearButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SurgManage_ClearButtonActionPerformed

    private void information_saveActionPerformed(java.awt.event.ActionEvent evt){
        MysqlConnect db = new MysqlConnect();
        String tableName = "Doctors";

        String doctorId = doctor_id.getText(); 
        String name = doctor_name.getText(); 
        String phone = doctor_phone.getText(); 
        String email = doctor_email.getText(); 
        String specialization = doctor_specialization.getText(); 
        String dpt = doctor_department.getText(); 
        String experience = doctor_experience.getText();
        String qualifications = doctor_qualifications.getText();
        String status = doctor_status.getSelectedItem().toString();

        if (isValidPhone(doctor_phone.getText())) {
            if (isValidEmail(doctor_email.getText())) {
                StringBuilder updateBuilder = new StringBuilder();
                String condition = "doctor_id = '" + doctorId + "'"; 
            
                if (!name.isEmpty()) {
                    updateBuilder.append("doctor_name = '").append(name).append("', ");
                }
                if (!phone.isEmpty()) {
                    updateBuilder.append("doctor_phone = '").append(phone).append("', ");
                }
                if (!email.isEmpty()) {
                    updateBuilder.append("doctor_email = '").append(email).append("', ");
                }
                if (!specialization.isEmpty()) {
                    updateBuilder.append("doctor_specialization = '").append(specialization).append("', ");
                }
                if (!dpt.isEmpty()) {
                    updateBuilder.append("doctor_department = '").append(dpt).append("', ");
                }
                if (!experience.isEmpty()) {
                    updateBuilder.append("doctor_experience = '").append(experience).append("', ");
                }
                if (!qualifications.isEmpty()) {
                    updateBuilder.append("doctor_qualifications = '").append(qualifications).append("', ");
                }
                if (!status.isEmpty()) {
                    updateBuilder.append("doctor_status = '").append(status).append("', ");
                }
            
                String update = updateBuilder.toString();
                if (update.endsWith(", ")) {
                    update = update.substring(0, update.length() - 2);
                }
            
                if (!update.isEmpty()) {
                    db.updateData(tableName, update, condition);
                    JOptionPane.showMessageDialog(this, "Date save successfully!");
                } else {
                    JOptionPane.showMessageDialog(null, "There is no data update!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Invalid Email !");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Invalid Phone Number!");
        } 
    }   

    private boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        Pattern pattern = Pattern.compile(emailRegex);
        if (email == null) {
            return false;
        }
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private boolean isValidPhone(String phone) {
        String phoneRegex = "01\\d-\\d{7,8}";
        Pattern pattern = Pattern.compile(phoneRegex);
        if (phone == null) {
            return false;
        }
        Matcher matcher = pattern.matcher(phone);
        return matcher.matches();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DateOfDiagnosis_label;
    private javax.swing.JFormattedTextField DateOfDiagnosis_textField;
    private javax.swing.JLabel DateOfSurgery_label;
    private javax.swing.JFormattedTextField DateOfSurgery_textField;
    private javax.swing.JLabel DateOfVisit_label8;
    private javax.swing.JTextArea DiagnosisDescription_TextArea;
    private javax.swing.JLabel DiagnosisDescription_label;
    private javax.swing.JLabel DiagnosisID_label;
    private javax.swing.JTextField DiagnosisID_textField;
    private javax.swing.JButton Diagnosis_ClearButton;
    private javax.swing.JButton Diagnosis_SaveButton;
    private javax.swing.JLabel DoctorID_label;
    private javax.swing.JButton MedRecord_ClearButton;
    private javax.swing.JButton MedRecord_SaveButton;
    private javax.swing.JLabel Notes_label8;
    private javax.swing.JLabel Outcomes_label;
    private javax.swing.JTextField Outcomes_textField;
    private javax.swing.JLabel PatientID_label;
    private javax.swing.JTable doctorScheduleTable;
    private javax.swing.JButton SurgManage_ClearButton;
    private javax.swing.JButton SurgManage_SaveButton;
    private javax.swing.JLabel backButton;
    private javax.swing.JTextField doctorID_textField;
    private javax.swing.JTextField doctor_department;
    private javax.swing.JTextField doctor_email;
    private javax.swing.JTextPane doctor_experience;
    private javax.swing.JTextField doctor_id;
    private javax.swing.JTextField doctor_name;
    private javax.swing.JTextField doctor_phone;
    private javax.swing.JTextPane doctor_qualifications;
    private javax.swing.JTextField doctor_specialization;
    private javax.swing.JComboBox<String> doctor_status;
    private javax.swing.JButton information_clear;
    private javax.swing.JButton information_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane doctorScrollPane;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel medicalRecordID_label8;
    private javax.swing.JTextField medicalRecordID_textField;
    private javax.swing.JFormattedTextField medicalRecord_dateOfVisitTextField;
    private javax.swing.JTextField medicalRecord_notesTextField;
    private javax.swing.JTextArea medical_record_treatmentPlansTextField;
    private javax.swing.JTextField patientID_textField;
    private javax.swing.JLabel prescriptionID_label;
    private javax.swing.JTextField surgeryID_textField;
    private javax.swing.JComboBox<String> surgeryType_comboBox;
    private javax.swing.JLabel surgeryType_label;
    private javax.swing.JTextArea treatmentPlans_TextArea;
    private javax.swing.JLabel treatmentPlans_label;
    private javax.swing.JLabel treatmentPlans_label10;
    // End of variables declaration//GEN-END:variables

    public void setDoctorId(String id) {
        doctor_id.setText(id);
    }

    public void setDoctorName(String name) {
        doctor_name.setText(name);
    }

    public void setDoctorPhone(String phone) {
        doctor_phone.setText(phone);
    }

    public void setDoctorEmail(String email) {
        doctor_email.setText(email);
    }

    public void setDoctorSpecialization(String specialization) {
        doctor_specialization.setText(specialization);
    }

    public void setDoctorDepartment(String department) {
        doctor_department.setText(department);
    }

    public void setDoctorExperience(String experience) {
        doctor_experience.setText(experience);
    }

    public void setDoctorQualifications(String qualifications) {
        doctor_qualifications.setText(qualifications);
    }

    public void setDoctorStatus(String status) {
        doctor_status.setSelectedItem(status);
    }

    public javax.swing.JComboBox<String> getDoctor_status() {
        return doctor_status;
    }
    
}
